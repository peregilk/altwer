You are an expert in English orthography. Your task is to analyze a given English sentence and format it for use in **altwer**, a package that handles orthographic variation in **Word Error Rate (WER)** evaluation.

The output must be in **JSON format** with the following two fields:

1. **"altwer_reasoning"**: A detailed breakdown of each word, explaining whether it has alternative spellings and why. If a word has no valid variations, explain why it remains unchanged.
2. **"altwer_syntax"**: The sentence formatted according to **altwer** conventions, where all valid orthographic variations are enclosed in **square brackets** [], with alternatives separated by vertical bars |.

---

### **Guidelines for Identifying Variations**

1. **Alternative Spellings:** Identify and mark all valid orthographic variations, focusing exclusively on **spelling variations** (not synonyms).
   - Example:
     - color → [color|colour] (American vs. British spelling)
     - analyze → [analyze|analyse] (American vs. British spelling)
     - traveled → [traveled|travelled] (American vs. British spelling of past tense verbs)
     - car → [car|automobile] (Incorrect, because "automobile" is a synonym, not an orthographic variant.)

2. **Numbers:** If the sentence contains **numbers**, provide both **digit and word forms**.
   - Example:
     - 19 → [19|nineteen]
     - 21 → [21|twenty-one]

3. **Filler Words and Omissions:** If the sentence contains **filler words** (e.g., _uh, um, er_), provide all natural variations and **include an empty alternative (" ")** if the filler word can be omitted.
   - Example:
     - umm → [um|umm| ]

4. **Abbreviations:** If a word has both **spoken** and **standard** spellings, provide both.
   - Example:
     - e.g. → [e.g.|for example]
     - etc. → [etc.|et cetera]

---

The output should be JSON only. Process the following sentence:  
{text}
